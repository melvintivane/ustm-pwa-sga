// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pwa_trabalho_sga.Models;

#nullable disable

namespace pwa_trabalho_sga.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("pwa_trabalho_sga.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Matricula_Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("disciplinas");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Estudante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("NrEstudante")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroBI")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("estudantes");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Exame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Disciplina_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Estudante_Id")
                        .HasColumnType("uuid");

                    b.Property<double>("Media")
                        .HasColumnType("double precision");

                    b.Property<double>("Normal")
                        .HasColumnType("double precision");

                    b.Property<double>("NotaFrequencia")
                        .HasColumnType("double precision");

                    b.Property<string>("Obs")
                        .HasColumnType("text");

                    b.Property<double>("Recorrencia")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("exames");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Inscricao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Estudante_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Turma_Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("inscricoes");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<Guid>("Estudante_Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("matriculas");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Nota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Disciplina_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Estudante_Id")
                        .HasColumnType("uuid");

                    b.Property<double>("Media")
                        .HasColumnType("double precision");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<double>("Teste1")
                        .HasColumnType("double precision");

                    b.Property<double>("Teste2")
                        .HasColumnType("double precision");

                    b.Property<double>("Trabalho1")
                        .HasColumnType("double precision");

                    b.Property<double>("Trabalho2")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("notas");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ano")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Periodo")
                        .HasColumnType("text");

                    b.Property<string>("Semestre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("turmas");
                });

            modelBuilder.Entity("pwa_trabalho_sga.Models.Turma_Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Disciplina_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Turma_Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("turma_disciplina");
                });
#pragma warning restore 612, 618
        }
    }
}
